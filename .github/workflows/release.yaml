name: release
defaults:
  run:
    shell: bash
on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
env:
  VERSION: ${GITHUB_REF#refs/*/}
jobs:
  release-draft:
    name: Create a release  draft for latest tag
    runs-on: ubuntu-20.04
    steps:
    - name: log action
      run: echo "Creating release ${VERSION}"
    - name: checkout
      uses: actions/checkout@v2
    - name: release
      uses: actions/create-release@v1
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ env.VERSION }}
        draft: true

  docker-image:
    name: publish docker image
    runs-on: ubuntu-20.04
    steps:
    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE="irbekrm/csi-s3"
        TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:latest"
        echo ::set-output name=tags::${TAGS}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-and-push-action@v2
      with:
        context: .
        file: ./build/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags:  ${{ steps.prep.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}